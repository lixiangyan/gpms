<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lixiangyan.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.lixiangyan.entity.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="s_num" property="sNum" jdbcType="INTEGER" />
    <result column="s_password" property="sPassword" jdbcType="VARCHAR" />
    <result column="s_name" property="sName" jdbcType="VARCHAR" />
    <result column="s_gender" property="sGender" jdbcType="VARCHAR" />
    <result column="s_birthday" property="sBirthday" jdbcType="VARCHAR" />
    <result column="s_date" property="sDate" jdbcType="TIMESTAMP" />
    <result column="s_class_id" property="sClassId" jdbcType="INTEGER" />
    <result column="s_grade" property="sGrade" jdbcType="VARCHAR" />
    <result column="s_state" property="sState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, s_num, s_password, s_name, s_gender, s_birthday, s_date, s_class_id, s_grade,
    s_state
  </sql>

  <!--学生动态查询-->
  <select id="selectStudentDynamic" parameterType="com.lixiangyan.entity.Student" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from student
    where 1 = 1
    <if test="id != null || id != ''" >
      and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="sNum != null || sNum != ''" >
      and s_num = #{sNum,jdbcType=INTEGER}
    </if>
    <if test="sPassword != null || sPassword != ''" >
      and s_password like "%"#{sPassword,jdbcType=VARCHAR}"%"
    </if>
    <if test="sName != null || sName != ''" >
      and s_name like "%"#{sName,jdbcType=VARCHAR}"%"
    </if>
    <if test="sGender != null || sGender != ''" >
      and s_gender like "%"#{sGender,jdbcType=VARCHAR}"%"
    </if>
    <if test="sBirthday != null || sBirthday != ''" >
      and s_birthday like "%"#{sBirthday,jdbcType=VARCHAR}"%"
    </if>
    <if test="sDate != null || sDate != ''" >
      and s_date like "%"#{sDate,jdbcType=TIMESTAMP}"%"
    </if>
    <if test="sClassId != null || sClassId != ''" >
      and s_class_id = #{sClassId,jdbcType=INTEGER}
    </if>
    <if test="sGrade != null || sGrade != ''" >
      and s_grade like "%"#{sGrade,jdbcType=VARCHAR}"%"
    </if>
    <if test="sState != null || sState != ''" >
      and s_state like "%"#{sState,jdbcType=INTEGER}"%"
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lixiangyan.entity.Student" >
    insert into student (id, s_num, s_password,
      s_name, s_gender, s_birthday,
      s_date, s_class_id, s_grade,
      s_state)
    values (#{id,jdbcType=INTEGER}, #{sNum,jdbcType=INTEGER}, #{sPassword,jdbcType=VARCHAR},
      #{sName,jdbcType=VARCHAR}, #{sGender,jdbcType=VARCHAR}, #{sBirthday,jdbcType=VARCHAR},
      #{sDate,jdbcType=TIMESTAMP}, #{sClassId,jdbcType=INTEGER}, #{sGrade,jdbcType=VARCHAR},
      #{sState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lixiangyan.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sNum != null" >
        s_num,
      </if>
      <if test="sPassword != null" >
        s_password,
      </if>
      <if test="sName != null" >
        s_name,
      </if>
      <if test="sGender != null" >
        s_gender,
      </if>
      <if test="sBirthday != null" >
        s_birthday,
      </if>
      <if test="sDate != null" >
        s_date,
      </if>
      <if test="sClassId != null" >
        s_class_id,
      </if>
      <if test="sGrade != null" >
        s_grade,
      </if>
      <if test="sState != null" >
        s_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sNum != null" >
        #{sNum,jdbcType=INTEGER},
      </if>
      <if test="sPassword != null" >
        #{sPassword,jdbcType=VARCHAR},
      </if>
      <if test="sName != null" >
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sGender != null" >
        #{sGender,jdbcType=VARCHAR},
      </if>
      <if test="sBirthday != null" >
        #{sBirthday,jdbcType=VARCHAR},
      </if>
      <if test="sDate != null" >
        #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sClassId != null" >
        #{sClassId,jdbcType=INTEGER},
      </if>
      <if test="sGrade != null" >
        #{sGrade,jdbcType=VARCHAR},
      </if>
      <if test="sState != null" >
        #{sState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lixiangyan.entity.Student" >
    update student
    <set >
      <if test="sNum != null" >
        s_num = #{sNum,jdbcType=INTEGER},
      </if>
      <if test="sPassword != null" >
        s_password = #{sPassword,jdbcType=VARCHAR},
      </if>
      <if test="sName != null" >
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sGender != null" >
        s_gender = #{sGender,jdbcType=VARCHAR},
      </if>
      <if test="sBirthday != null" >
        s_birthday = #{sBirthday,jdbcType=VARCHAR},
      </if>
      <if test="sDate != null" >
        s_date = #{sDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sClassId != null" >
        s_class_id = #{sClassId,jdbcType=INTEGER},
      </if>
      <if test="sGrade != null" >
        s_grade = #{sGrade,jdbcType=VARCHAR},
      </if>
      <if test="sState != null" >
        s_state = #{sState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lixiangyan.entity.Student" >
    update student
    set s_num = #{sNum,jdbcType=INTEGER},
      s_password = #{sPassword,jdbcType=VARCHAR},
      s_name = #{sName,jdbcType=VARCHAR},
      s_gender = #{sGender,jdbcType=VARCHAR},
      s_birthday = #{sBirthday,jdbcType=VARCHAR},
      s_date = #{sDate,jdbcType=TIMESTAMP},
      s_class_id = #{sClassId,jdbcType=INTEGER},
      s_grade = #{sGrade,jdbcType=VARCHAR},
      s_state = #{sState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
